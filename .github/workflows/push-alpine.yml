---
name: Push alpine

on:
  push:
    branches:
      - main
    paths:
      - src/alpine/*
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_OIDC_ROLE_ARN: ${{ secrets.AWS_OIDC_ROLE_ARN }}
  AWS_ECR_PUBLIC_IMAGE_NAME: alpine
  AWS_ECR_PUBLIC_REPOSITORY_GROUP: base
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TZ: Asia/Singapore

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup build
      uses: ./.github/actions/setup-build
      with:
        AWS_OIDC_ROLE_ARN: ${{ env.AWS_OIDC_ROLE_ARN }}
        AWS_ECR_PUBLIC_IMAGE_NAME: ${{ env.AWS_ECR_PUBLIC_IMAGE_NAME }}
        AWS_ECR_PUBLIC_REPOSITORY_GROUP: ${{ env.AWS_ECR_PUBLIC_REPOSITORY_GROUP }}

    - name: Extract Version from Dockerfile
      uses: ./.github/actions/apply-tags
      with:
        AWS_ECR_PUBLIC_IMAGE_NAME: ${{ env.AWS_ECR_PUBLIC_IMAGE_NAME }}
        AWS_ECR_PUBLIC_IMAGE_TAG_SCRIPT: tags.sh

    - name: Docker build & push
      uses: docker/bake-action@v5
      with:
        targets: push
        workdir: ./src/${{ env.AWS_ECR_PUBLIC_IMAGE_NAME }}

  run-push:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup python
        uses: ./.github/actions/setup-python
        with:
          AWS_OIDC_ROLE_ARN: ${{ env.AWS_OIDC_ROLE_ARN }}

      - run: python3 scripts/run_image_readme.py ${{ env.AWS_ECR_PUBLIC_IMAGE_NAME }}

      - name: Git commit
        uses: ./.github/actions/git-commit
        with:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
